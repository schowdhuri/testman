{"version":3,"sources":["client/store/index.js","client/utils/history.ts","client/reducers/loading.ts","constants/actions.ts","client/reducers/todos.ts","client/reducers/index.ts","client/actions/index.ts","utils/request.ts","client/sagas/deleteTodo.ts","constants/apiRoot.ts","client/sagas/getTodos.ts","client/sagas/saveTodo.ts","client/sagas/updateTodo.ts","client/sagas/index.ts","client/components/CreateTodo.tsx","client/selectors/index.ts","client/components/TodoList.tsx","client/components/App.tsx","client/index.tsx"],"names":["composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createBrowserHistory","initialState","id","status","index","state","action","type","findIndex","taskId","slice","value","item","createRootReducer","history","combineReducers","router","connectRouter","loading","todos","setLoading","updateTodoSuccess","fetch","require","JSON_HEADERS","Accept","FORM_HEADERS","isJSON","response","contentType","headers","get","toLowerCase","indexOf","serialize","jsonData","qString","Object","keys","forEach","key","Array","length","getFormData","fd","FormData","append","FetchError","params","statusText","text","json","Error","captureStackTrace","name","request","url","options","a","method","toUpperCase","sendCredentials","credentials","dataType","data","body","JSON","stringify","ok","parse","errorJSON","ex0","deleteTodo","put","call","console","log","error","takeEvery","getTodos","saveTodo","updateTodo","all","Form","styled","form","TextBox","input","AddButton","button","CreateTodo","useState","setName","dispatch","useDispatch","createTodo","completed","onSubmit","ev","preventDefault","onChange","target","placeholder","onClick","className","List","ul","Item","li","Checkbox","label","props","ItemName","div","ItemActions","DeleteButton","TodoList","useSelector","useEffect","changeCompleted","map","reducer","middleware","Skeleton","Wrapper","Card","children","sagaMiddleware","createMiddleware","rootReducer","store","routerMiddleware","REACT_APP_TARGET_ENV","process","createStore","applyMiddleware","run","sagas","Component","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5239a377.chunk.js","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\n\nconst composeEnhancers =\n  typeof window !== \"undefined\" &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n  process.env.NODE_ENV !== \"production\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : compose;\n\nexport default function configureStore(reducer, middleware) {\n  console.log({ REACT_APP_TARGET_ENV: process.env.REACT_APP_TARGET_ENV });\n  const store = createStore(\n    reducer,\n    {},\n    composeEnhancers(applyMiddleware(...middleware))\n  );\n  return store;\n}\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import { IS_LOADING } from \"../../constants/actions\";\nimport { LoadingAction } from \"../../types/actions\";\n\nconst initialState: Array<string> = [];\n\nexport default (state = initialState, action: LoadingAction) => {\n  const { type } = action;\n  let id: string, status: boolean, index: number;\n  switch (type) {\n    case IS_LOADING:\n      id = action.id;\n      status = action.status;\n      index = state.findIndex(taskId => taskId === id);\n      if (status) {\n        return [...state, id];\n      } else if (index !== -1) {\n        return [...state.slice(0, index), ...state.slice(index + 1)];\n      }\n      break;\n\n    default:\n      return state;\n  }\n};\n","export const IS_LOADING             = \"IS_LOADING\";\nexport const LOGOUT                 = \"LOGOUT\";\nexport const SAVE_TODO              = \"SAVE_TODO\";\nexport const SAVE_TODO_OK           = \"SAVE_TODO_OK\";\nexport const SAVE_TODO_ERR          = \"SAVE_TODO_ERR\";\nexport const GET_TODO               = \"GET_TODO\";\nexport const GET_TODO_OK            = \"GET_TODO_OK\";\nexport const GET_TODO_ERR           = \"GET_TODO_ERR\";\nexport const UPDATE_TODO            = \"UPDATE_TODO\";\nexport const UPDATE_TODO_OK         = \"UPDATE_TODO_OK\";\nexport const UPDATE_TODO_ERR        = \"UPDATE_TODO_ERR\";\nexport const DEL_TODO               = \"DEL_TODO\";\nexport const DEL_TODO_OK            = \"DEL_TODO_OK\";\nexport const DEL_TODO_ERR           = \"DEL_TODO_ERR\";\nexport const GET_TODOS              = \"GET_TODOS\";\nexport const GET_TODOS_OK           = \"GET_TODOS_OK\";\nexport const GET_TODOS_ERR          = \"GET_TODOS_ERR\";\n","import * as ACTIONS from \"../../constants/actions\";\nimport * as Types from \"../../types/actions\";\nimport Todo from \"../../types/todo\";\n\nconst initialState: Array<Todo> = [];\n\nexport default (state = initialState, action: any) => {\n  const { type } = action;\n\n  switch (type) {\n    case ACTIONS.GET_TODOS_OK:\n      return action.value;\n\n    case ACTIONS.SAVE_TODO_OK:\n      return [action.value, ...state];\n\n    case ACTIONS.UPDATE_TODO_OK: {\n      const value: Todo = action.value;\n      const index: number = state.findIndex(item => item.id === value.id);\n      if (index !== -1) {\n        return [\n          ...state.slice(0, index),\n          action.value,\n          ...state.slice(index + 1)\n        ];\n      }\n      break;\n    }\n\n    case ACTIONS.DEL_TODO_OK: {\n      const value: Todo = action.value;\n      const index: number = state.findIndex(item => item.id === value.id);\n      if (index !== -1) {\n        return [...state.slice(0, index), ...state.slice(index + 1)];\n      }\n      break;\n    }\n  }\n  return state;\n};\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nimport loading from \"./loading\";\nimport todos from \"./todos\";\n\nfunction createRootReducer(history: any) {\n  return combineReducers({\n    router: connectRouter(history),\n    loading,\n    todos\n  });\n}\n\nexport default createRootReducer;\n","import * as ACTIONS from \"../../constants/actions\";\nimport * as Types from \"../../types/actions\";\nimport Todo from \"../../types/todo\";\n\nexport const setLoading = (\n  id: string,\n  status: boolean\n): Types.LoadingAction => ({\n  type: ACTIONS.IS_LOADING,\n  id,\n  status\n});\n\nexport const saveTodo = (data: Todo): Types.SaveTodoAction => ({\n  type: ACTIONS.SAVE_TODO,\n  data\n});\n\nexport const saveTodoSuccess = (todo: Todo): Types.SaveTodoSuccessAction => ({\n  type: ACTIONS.SAVE_TODO_OK,\n  value: todo\n});\n\nexport const saveTodoFailure = (error: string): Types.FailureAction => ({\n  type: ACTIONS.SAVE_TODO_ERR,\n  error\n});\n\nexport const getTodo = (id: number): Types.GetTodoAction => ({\n  type: ACTIONS.GET_TODO,\n  id\n});\n\nexport const getTodoSuccess = (value: Todo): Types.GetTodoSuccessAction => ({\n  type: ACTIONS.GET_TODO_OK,\n  value\n});\n\nexport const getTodoFailure = (error: string): Types.FailureAction => ({\n  type: ACTIONS.GET_TODO_ERR,\n  error\n});\n\nexport const updateTodo = (value: Todo): Types.UpdateTodoAction => ({\n  type: ACTIONS.UPDATE_TODO,\n  value\n});\n\nexport const updateTodoSuccess = (\n  value: Todo\n): Types.UpdateTodoSuccessAction => ({\n  type: ACTIONS.UPDATE_TODO_OK,\n  value\n});\n\nexport const updateTodoFailure = (error: string): Types.FailureAction => ({\n  type: ACTIONS.UPDATE_TODO_ERR,\n  error\n});\n\nexport const deleteTodo = (id: number): Types.DeleteTodoAction => ({\n  type: ACTIONS.DEL_TODO,\n  id\n});\n\nexport const deleteTodoSuccess = (\n  value: Todo\n): Types.DeleteTodoSuccessAction => ({\n  type: ACTIONS.DEL_TODO_OK,\n  value\n});\n\nexport const deleteTodoFailure = (error: string): Types.FailureAction => ({\n  type: ACTIONS.DEL_TODO_ERR,\n  error\n});\n\nexport const getTodos = () => ({\n  type: ACTIONS.GET_TODOS\n});\n\nexport const getTodosSuccess = (\n  value: Todo[]\n): Types.GetTodosSuccessAction => ({\n  type: ACTIONS.GET_TODOS_OK,\n  value\n});\n\nexport const getTodosFailure = (error: string): Types.FailureAction => ({\n  type: ACTIONS.GET_TODOS_ERR,\n  error\n});\n","const fetch =\n  (typeof window !== \"undefined\" && window.fetch) || require(\"node-fetch\");\n\nconst JSON_HEADERS = {\n  Accept: \"application/json\",\n  \"Content-Type\": \"application/json\"\n};\nconst FORM_HEADERS = {\n  \"Content-type\": \"application/x-www-form-urlencoded\"\n};\n\nfunction isJSON(response: any) {\n  const contentType = response.headers.get(\"content-type\");\n  return (\n    contentType && contentType.toLowerCase().indexOf(\"application/json\") >= 0\n  );\n}\n\nfunction serialize(jsonData: any) {\n  let qString = \"\";\n  if (!jsonData || typeof jsonData !== \"object\") return qString;\n  Object.keys(jsonData).forEach((key: string) => {\n    if (jsonData[key] instanceof Array) {\n      jsonData[key].forEach((value: string) => {\n        qString += key + \"=\" + value + \"&\";\n      });\n    } else {\n      qString += key + \"=\" + jsonData[key] + \"&\";\n    }\n  });\n  if (!qString) return qString;\n  qString = qString.slice(0, qString.length - 1);\n  return qString;\n}\nconst getFormData = (jsonData: any) => {\n  const fd = new FormData();\n  if (!jsonData || typeof jsonData !== \"object\") return fd;\n  Object.keys(jsonData).forEach((key: string) => {\n    fd.append(key, jsonData[key]);\n  });\n  return fd;\n};\n\ninterface IOptions {\n  type?: string;\n  method?: string;\n  headers?: any;\n  dataType?: string;\n  data?: any;\n  sendCredentials?: boolean;\n}\n\ninterface IResponse {\n  status: number;\n  statusText?: string;\n  text?: string;\n  json?: any;\n}\n\ninterface FetchParams {\n  method: string;\n  headers: any;\n  credentials?: string;\n  body?: any;\n}\n\ninterface IFetchError {\n  status: number;\n  statusText: string;\n  text?: string;\n  json?: any;\n}\n\nclass FetchError extends Error implements IFetchError {\n  status: number;\n  statusText: string;\n  text: string = \"\";\n  json: any = null;\n\n  constructor(params: IFetchError) {\n    super(\"FetchError\");\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, FetchError);\n    }\n    this.name = \"FetchError\";\n    this.status = params.status;\n    this.statusText = params.statusText;\n    if (params.text) this.text = params.text;\n    if (params.json) this.json = params.json;\n  }\n}\n\nconst request = async (url: string, options?: IOptions): Promise<IResponse> => {\n  if (!options) options = {};\n  if (!url) {\n    throw new Error(\"URL required\");\n  }\n  const params: FetchParams = {\n    method: options.type || options.method || \"GET\",\n    headers: options.headers\n  };\n  params.method = params.method.toUpperCase();\n\n  if (options.sendCredentials) {\n    params.credentials = \"include\";\n  }\n  if (params.method !== \"GET\") {\n    if (options.dataType === \"form\") {\n      params.headers = {\n        ...FORM_HEADERS,\n        ...params.headers\n      };\n    }\n    if (options.dataType === \"json\") {\n      params.headers = {\n        ...JSON_HEADERS,\n        ...params.headers\n      };\n      if (options.data) params.body = JSON.stringify(options.data);\n    }\n    if (!params.body) {\n      if (options.data instanceof FormData) params.body = options.data;\n      else params.body = getFormData(options.data);\n    }\n  } else if (options.data && typeof options.data === \"object\") {\n    // add query params\n    let qString = serialize(options.data);\n    if (url.indexOf(\"?\") > 0) {\n      qString = \"&\" + qString;\n    } else {\n      qString = \"?\" + qString;\n    }\n    url += qString;\n  }\n  const response = await fetch(url, params);\n  const text = await response.text();\n  if (response.ok) {\n    if (isJSON(response)) {\n      try {\n        const json = JSON.parse(text);\n        return {\n          status: response.status,\n          statusText: response.statusText,\n          text,\n          json\n        };\n      } catch (ex) {\n        throw new FetchError({\n          status: response.status,\n          statusText: response.statusText,\n          text\n        });\n      }\n    }\n    return {\n      status: response.status,\n      statusText: response.statusText,\n      text\n    };\n  }\n  // process error\n  if (isJSON(response)) {\n    let errorJSON;\n    try {\n      errorJSON = JSON.parse(text);\n    } catch (ex0) {}\n    if (errorJSON) {\n      throw new FetchError({\n        status: response.status,\n        statusText: response.statusText,\n        text,\n        json: errorJSON\n      });\n    } else {\n      throw new FetchError({\n        status: response.status,\n        statusText: response.statusText,\n        text\n      });\n    }\n  }\n  throw new FetchError({\n    status: response.status,\n    statusText: response.statusText,\n    text\n  });\n};\n\nexport default request;\n","import { takeEvery, put, call } from \"redux-saga/effects\";\n\nimport { IS_LOADING, DEL_TODO } from \"../../constants/actions\";\nimport { setLoading, deleteTodoSuccess, deleteTodoFailure } from \"../actions\";\nimport request from \"../../utils/request\";\nimport API_ROOT from \"../../constants/apiRoot\";\nimport { DeleteTodoAction } from \"../../types/actions\";\n\nfunction* deleteTodo(action: DeleteTodoAction) {\n  const { id } = action;\n  yield put(setLoading(DEL_TODO, true));\n  try {\n    const response: any = yield call(request, `${API_ROOT}api/todos/${id}`, {\n      method: \"delete\"\n    });\n    yield put(\n      deleteTodoSuccess({\n        ...response.json,\n        id\n      })\n    );\n  } catch (ex) {\n    console.log(ex);\n    yield put(deleteTodoFailure(ex.text));\n  }\n  yield put(setLoading(DEL_TODO, false));\n}\n\nexport default function*() {\n  yield takeEvery(DEL_TODO, deleteTodo);\n}\n","export default \"/\";\n","import { takeEvery, put, call } from \"redux-saga/effects\";\n\nimport { IS_LOADING, GET_TODOS } from \"../../constants/actions\";\nimport { setLoading, getTodosSuccess, getTodosFailure } from \"../actions\";\nimport request from \"../../utils/request\";\nimport API_ROOT from \"../../constants/apiRoot\";\nimport { GetTodosAction } from \"../../types/actions\";\n\nfunction* getTodos(action: GetTodosAction) {\n  yield put(setLoading(GET_TODOS, true));\n  try {\n    const response: any = yield call(request, `${API_ROOT}api/todos`);\n    yield put(getTodosSuccess(response.json));\n  } catch (ex) {\n    console.log(ex);\n    yield put(getTodosFailure(ex.text));\n  }\n  yield put(setLoading(GET_TODOS, false));\n}\n\nexport default function*() {\n  yield takeEvery(GET_TODOS, getTodos);\n}\n","import { takeEvery, put, call } from \"redux-saga/effects\";\n\nimport { IS_LOADING, SAVE_TODO } from \"../../constants/actions\";\nimport { setLoading, saveTodoSuccess, saveTodoFailure } from \"../actions\";\nimport request from \"../../utils/request\";\nimport API_ROOT from \"../../constants/apiRoot\";\nimport { SaveTodoAction } from \"../../types/actions\";\n\nfunction* saveTodo(action: SaveTodoAction) {\n  const { data } = action;\n  yield put(setLoading(SAVE_TODO, true));\n  try {\n    const response: any = yield call(request, `${API_ROOT}api/todo`, {\n      method: \"post\",\n      dataType: \"json\",\n      data\n    });\n    yield put(saveTodoSuccess(response.json));\n  } catch (ex) {\n    console.log(ex);\n    yield put(saveTodoFailure(ex.text));\n  }\n  yield put(setLoading(SAVE_TODO, false));\n}\n\nexport default function*() {\n  yield takeEvery(SAVE_TODO, saveTodo);\n}\n","import { takeEvery, put, call } from \"redux-saga/effects\";\n\nimport { IS_LOADING, UPDATE_TODO } from \"../../constants/actions\";\nimport { setLoading, updateTodoSuccess, updateTodoFailure } from \"../actions\";\nimport request from \"../../utils/request\";\nimport API_ROOT from \"../../constants/apiRoot\";\nimport { UpdateTodoAction } from \"../../types/actions\";\n\nfunction* updateTodo(action: UpdateTodoAction) {\n  const { value } = action;\n  yield put(setLoading(UPDATE_TODO, true));\n  try {\n    const response: any = yield call(\n      request,\n      `${API_ROOT}api/todos/${value.id}`,\n      {\n        method: \"put\",\n        dataType: \"json\",\n        data: value\n      }\n    );\n    yield put(updateTodoSuccess(response.json));\n  } catch (ex) {\n    console.log(ex);\n    yield put(updateTodoFailure(ex.text));\n  }\n  yield put(setLoading(UPDATE_TODO, false));\n}\n\nexport default function*() {\n  yield takeEvery(UPDATE_TODO, updateTodo);\n}\n","import { all } from \"redux-saga/effects\";\n\nimport deleteTodo from \"./deleteTodo\";\nimport getTodos from \"./getTodos\";\nimport saveTodo from \"./saveTodo\";\nimport updateTodo from \"./updateTodo\";\n\nexport default function*() {\n  yield all([deleteTodo(), getTodos(), saveTodo(), updateTodo()]);\n}\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport * as actions from \"../actions/index\";\nimport Todo from \"../../types/todo\";\nimport { getTodos } from \"../selectors\";\nimport logo from \"../images/logo.svg\";\nimport \"./App.css\";\n\ninterface CreateTodoProps {}\n\nconst CreateTodo: FunctionComponent<CreateTodoProps> = () => {\n  const [name, setName] = useState(\"\");\n  const dispatch = useDispatch();\n  // handlers\n  const changeName = (ev: React.FormEvent<EventTarget>) => {\n    const target = ev.target as HTMLInputElement;\n    setName(target.value);\n  };\n  const createTodo = () => {\n    if (name) {\n      dispatch(actions.saveTodo({ name, completed: false }));\n      setName(\"\");\n    }\n  };\n  const onSubmit = (ev: React.FormEvent<EventTarget>) => {\n    ev.preventDefault();\n    createTodo();\n    return false;\n  };\n  // render\n  return (\n    <Form onSubmit={onSubmit}>\n      <TextBox\n        type=\"text\"\n        onChange={changeName}\n        value={name}\n        placeholder=\"What's next?\"\n      />\n      <AddButton onClick={createTodo}>\n        <i className=\"fa fa-plus\" />\n      </AddButton>\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  align-items: center;\n  display: flex;\n  margin-bottom: 2.5rem;\n`;\nconst TextBox = styled.input`\n  background: #e2e2e2;\n  border: none;\n  border-radius: 4px;\n  box-shadow: inset 8px 8px 16px #d7d7d7, inset -8px -8px 16px #ededed;\n  flex: 1;\n  font-size: 1.25rem;\n  padding: 1rem;\n  @media all and (min-width: 768px) {\n    font-size: 1.5rem;\n    padding: 2rem;\n  }\n`;\nconst AddButton = styled.button`\n  align-items: center;\n  background: #e2e2e2;\n  border: none;\n  border-radius: 50%;\n  box-shadow:  6px 6px 12px #d7d7d7,\n               -6px -6px 12px #ededed;\n  color: #17ab26;\n  display: flex;\n  font-size: 1.25rem;\n  justify-content: center;\n  height: 3rem;\n  margin-left: 1rem;\n  width: 3rem;\n  transition: background-color 0.2s, color 0.2s;\n\n  @media all and (min-width: 780px) {\n    height: 4rem;\n    width: 4rem;\n  }\n  &:active,\n  &:target {\n    background: #17ab26;\n    color: #e3e3e3;\n  }\n`;\n\nexport default CreateTodo;\n","import { createSelector } from \"reselect\";\nimport { RootState } from \"../../types/rootState\";\nimport Todo from \"../../types/todo\";\n\nexport const isLoading = (state: RootState): boolean =>\n  Boolean(state.loading.length);\nexport const getTodos = (state: RootState): Todo[] => state.todos;\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport * as actions from \"../actions/index\";\nimport Todo from \"../../types/todo\";\nimport { getTodos } from \"../selectors\";\n\ninterface TodoListProps {}\n\ninterface CheckboxProps {\n  completed: boolean;\n  onClick?: any;\n}\n\nconst TodoList: FunctionComponent<TodoListProps> = () => {\n  const dispatch = useDispatch();\n  const todos: Todo[] = useSelector(getTodos);\n  useEffect(() => {\n    dispatch(actions.getTodos());\n  }, []);\n  // handlers\n  const changeCompleted = (item: Todo) => () => {\n    dispatch(\n      actions.updateTodo({\n        ...item,\n        completed: !item.completed\n      })\n    );\n  };\n  const deleteTodo = (item: Todo) => () => {\n    dispatch(actions.deleteTodo(item.id!));\n  };\n  // render\n  return (\n    <List>\n      {todos.map(item => (\n        <Item key={item.id}>\n          <Checkbox completed={item.completed} onClick={changeCompleted(item)}>\n            {!item.completed || <i className=\"fa fa-check\" />}\n          </Checkbox>\n          <ItemName onClick={changeCompleted(item)}>{item.name}</ItemName>\n          <ItemActions>\n            <DeleteButton onClick={deleteTodo(item)}>\n              <i className=\"fa fa-times\" />\n            </DeleteButton>\n          </ItemActions>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nconst List = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n`;\nconst Item = styled.li`\n  align-items: center;\n  display: flex;\n  padding: 1rem 0;\n  @media all and (min-width: 780px) {\n    padding: 1rem 0.5rem 1rem 0;\n  }\n  & + & {\n    border-top: solid 1px #eaeaea;\n  }\n`;\nconst Checkbox = styled.label<CheckboxProps>`\n  align-items: center;\n  background: #e2e2e2;\n  border-radius: 4px;\n  box-shadow: inset 6px 6px 12px #d7d7d7, inset -6px -6px 12px #ededed;\n  display: flex;\n  height: 2rem;\n  justify-content: center;\n  margin-right: 1rem;\n  width: 2rem;\n\n  ${props =>\n    props.completed\n      ? `\n      background-color: #17ab26;\n      box-shadow: inset 6px 6px 12px #16a224,\n            inset -6px -6px 12px #18b428;\n      color: #fff;\n    `\n      : ``}\n\n  input[type=\"checkbox\"] {\n    display: none;\n  }\n`;\nconst ItemName = styled.div`\n  flex: 5;\n`;\nconst ItemActions = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: flex-end;\n`;\nconst DeleteButton = styled.button`\n  align-items: center;\n  background: #e2e2e2;\n  border: none;\n  border-radius: 50%;\n  box-shadow: 6px 6px 12px #d7d7d7, -6px -6px 12px #ededed;\n  color: #982929;\n  display: flex;\n  font-size: 1.25rem;\n  justify-content: center;\n  height: 3rem;\n  width: 3rem;\n  transition: background-color 0.2s, color 0.2s;\n\n  &:active,\n  &:target {\n    background: #982929;\n    color: #e3e3e3;\n  }\n`;\n\nexport default TodoList;\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport styled from \"styled-components\";\n\nimport history from \"../utils/history\";\nimport Todo from \"../../types/todo\";\nimport { getTodos } from \"../selectors\";\nimport CreateTodo from \"./CreateTodo\";\nimport TodoList from \"./TodoList\";\n\nimport \"./App.css\";\n\ninterface AppProps {\n  children: any;\n}\n\nconst Skeleton: FunctionComponent<AppProps> = (props: AppProps) => {\n  return (\n    <Wrapper>\n      <Card>{props.children}</Card>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  min-height: 100vh;\n  @media all and (min-width: 780px) {\n    padding: 2rem;\n  }\n`;\nconst Card = styled.div`\n  padding: 2rem 1rem;\n  width: 100vw;\n  @media all and (min-width: 780px) {\n    background: #e2e2e2;\n    border-radius: 16px;\n    box-shadow: 20px 20px 60px #c0c0c0, -20px -20px 60px #ffffff;\n    max-width: 60rem;\n    padding: 2rem;\n    width: 80vw;\n  }\n`;\n\n// Routes\nexport default () => (\n  <ConnectedRouter history={history}>\n    <Switch>\n      <Route path=\"/\" exact>\n        <Skeleton>\n          <CreateTodo />\n          <TodoList />\n        </Skeleton>\n      </Route>\n    </Switch>\n  </ConnectedRouter>\n);\n","import React, { FunctionComponent } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport createMiddleware from \"redux-saga\";\nimport { routerMiddleware } from \"connected-react-router\";\n\n// import * as serviceWorker from './serviceWorker';\nimport configureStore from \"./store\"; // eslint-disable-line import/default\nimport history from \"./utils/history\";\nimport createRootReducer from \"./reducers\";\nimport sagas from \"./sagas\";\nimport App from \"./components/App\";\n\nimport \"./css/index.css\";\n\nconst sagaMiddleware = createMiddleware();\nconst rootReducer = createRootReducer(history);\nconst store = configureStore(rootReducer, [\n  sagaMiddleware,\n  routerMiddleware(history)\n]);\nsagaMiddleware.run(sagas);\n\nconst render = (Component: FunctionComponent) =>\n  ReactDOM.render(\n    <Provider store={store}>\n      <Component />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n\nrender(App);\n\n// if (module.hot) {\n//   module.hot.accept('./routes', () => {\n//     const NextApp = require('./routes').default;\n//     render(NextApp);\n//   });\n// }\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}